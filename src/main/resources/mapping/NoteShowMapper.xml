<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dllyal.forum.mapper.NoteShowMapper" >
  <resultMap id="BaseResultMap" type="com.dllyal.forum.model.NoteShow" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="nid" property="nid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="uname" property="uname" jdbcType="VARCHAR" />
    <result column="upicsrc" property="upicsrc" jdbcType="VARCHAR" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="ncontext" property="ncontext" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="modifytime" property="modifytime" jdbcType="TIMESTAMP" />
    <result column="floor" property="floor" jdbcType="INTEGER" />
    <result column="fathernid" property="fathernid" jdbcType="INTEGER" />
    <result column="fatheruid" property="fatheruid" jdbcType="INTEGER" />
    <result column="fatheruname" property="fatheruname" jdbcType="VARCHAR" />
    <result column="tid" property="tid" jdbcType="INTEGER" />
    <result column="backnum" property="backnum" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    nid, uid, uname, upicsrc, sign, name, ncontext, createtime, modifytime, floor, fathernid, fatheruid, fatheruname, tid, backnum, state
  </sql>
  
  <!-- 根据tid获取整楼帖内容 -->
  <select id="selectMainNotesByTid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT 
		n.nid,u.uid,u.uname,u.upicsrc,u.sign, n.`name`,n.ncontext, n.createtime,n.modifytime,n.floor,n.fathernid,n.fatheruid,
		(SELECT u2.uname FROM `user` u2 WHERE n.fatheruid=u2.uid) AS fatheruname,
		n.tid ,(SELECT COUNT(*) FROM note n2 WHERE n2.floor = n.floor)-1 AS backnum,n.state
	FROM note n,`user` u 
	WHERE n.uid=u.uid AND n.fathernid=0 AND n.state=0 AND n.tid=#{tid,jdbcType=INTEGER} ORDER BY n.floor
  </select>

  <!-- 根据tid和floor获取指定樓層的回復 -->
  <select id="selectBacksByTidAndFloor" resultMap="BaseResultMap" >
    SELECT 
		n.nid,u.uid,u.uname,u.upicsrc,u.sign, n.`name`,n.ncontext, n.createtime,n.modifytime,n.floor,n.fathernid,n.fatheruid,
		(SELECT u2.uname FROM `user` u2 WHERE n.fatheruid=u2.uid) AS fatheruname,
		n.tid ,0 AS backnum,n.state
	FROM note n,`user` u 
	WHERE n.uid=u.uid AND n.fathernid!=0 AND n.state=0 AND n.tid=#{tid,jdbcType=INTEGER} AND n.floor=#{floor,jdbcType=INTEGER} ORDER BY n.createtime

  </select>
  
  <!-- 根据uid获取user的普通发帖,不含本用户信息,state=0 -->
  <select id="selectOnlyNotesByUid" resultMap="BaseResultMap" >
    SELECT 
		n.nid,n.uid,0 AS uname,0 AS upicsrc,0 AS sign,(SELECT t.tname FROM topic t WHERE t.tid=n.tid) AS `name`,n.ncontext, n.createtime,n.modifytime,n.floor,n.fathernid,n.fatheruid,
		(SELECT u.uname FROM `user` u WHERE n.fatheruid=u.uid) AS fatheruname,
		n.tid ,0 AS backnum,n.state
	FROM note n 
	WHERE n.state=0 AND n.uid = #{uid,jdbcType=INTEGER} ORDER BY n.createtime DESC
  </select>
  
  <!-- 根据uid获取user的普通发帖,不含本用户信息 -->
  <select id="selectAllNotesByUid" resultMap="BaseResultMap" >
    SELECT 
		n.nid,n.uid,0 AS uname,0 AS upicsrc,0 AS sign,(SELECT t.tname FROM topic t WHERE t.tid=n.tid) AS `name`,n.ncontext, n.createtime,n.modifytime,n.floor,n.fathernid,n.fatheruid,
		(SELECT u.uname FROM `user` u WHERE n.fatheruid=u.uid) AS fatheruname,
		n.tid ,0 AS backnum,n.state
	FROM note n 
	WHERE n.uid = #{uid,jdbcType=INTEGER} ORDER BY n.createtime DESC
  </select>
  
</mapper>